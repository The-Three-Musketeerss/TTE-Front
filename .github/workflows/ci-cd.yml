name: CI/CD

on:
  pull_request:
    branches:
      - main
  release:
    types:
      - published

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Install dependencies
        run: npm ci

      - name: Build production bundle
        run: npm run build:prod

  publish:
    name: Publish Docker image
    needs: build
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Install & build
        run: |
          npm ci
          npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 \
            | docker login --username AWS --password-stdin ${{ secrets.REPOSITORY }}

      - id: meta
        name: Extract Docker metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.REPOSITORY }}
          tags: |
            type=semver,pattern=v{{version}}
            latest

      - name: Build & push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            VITE_API_URL=${{ secrets.VITE_API_URL }}
            VITE_ENV=${{ secrets.VITE_ENV }}
            VITE_SENTRY_DSN=${{ secrets.VITE_SENTRY_DSN }}
            VITE_TRACE_TARGET_DEV=${{ secrets.VITE_TRACE_TARGET_DEV }}
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}

  deploy:
    needs: publish
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: deployments/frontend-ecs-task.json
          service: FrontTask-service
          cluster: FrontTTE
          wait-for-service-stability: true
